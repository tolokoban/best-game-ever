{"version":3,"sources":["canvas.tsx","index.tsx"],"names":["Canvas","ref","React","createRef","canvas","this","current","props","init","className","Component","ReactDOM","render","scene","FlatLand","Scene","Painter","Clear","start","document","getElementById"],"mappings":"iOAQqBA,G,iNACAC,IAA0CC,IAAMC,Y,mFAG7D,IAAMC,EAASC,KAAKJ,IAAIK,QACnBF,GACLC,KAAKE,MAAMC,KAAKJ,K,+BAIhB,OAAQ,4BAAQH,IAAKI,KAAKJ,IAAKQ,UAAU,e,GAVbP,IAAMQ,YCH1CC,IAASC,OAAO,kBAAC,EAAD,CAAQJ,KAKxB,SAAcJ,GAEV,IAAMS,EAAQ,IAAIC,IAASC,MAAMX,GAEjC,IAAIU,IAASE,QAAQC,MAAM,aAAcJ,GAEzCA,EAAMK,WAX6BC,SAASC,eAAe,U","file":"static/js/main.282753b7.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./canvas.css\"\n\ninterface ICanvasProps {\n    init: (canvas: HTMLCanvasElement) => void\n}\n\nexport default class Canvas extends React.Component<ICanvasProps, {}> {\n    private readonly ref: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n    componentDidMount() {\n        const canvas = this.ref.current\n        if (!canvas) return\n        this.props.init(canvas)\n    }\n\n    render() {\n        return (<canvas ref={this.ref} className=\"Canvas\"></canvas>)\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport FlatLand from 'flat-land-gl'\nimport Canvas from './canvas'\n\nReactDOM.render(<Canvas init={init}/>, document.getElementById('root'));\n\n/**\n * Here is the code for your wonderful game!\n */\nfunction init(canvas: HTMLCanvasElement) {\n    // Create a Scene for the canvas.\n    const scene = new FlatLand.Scene(canvas)\n    // Add a simple painter.\n    new FlatLand.Painter.Clear(\"background\", scene)\n    // Start rendering.\n    scene.start()\n}\n"],"sourceRoot":""}